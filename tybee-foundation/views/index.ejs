<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</head>
<body>
    <h1><%= title %></h1>
</body>
<script lang="javascript">
// Request access to the microphone
navigator.mediaDevices.getUserMedia({ audio: true })
  .then(stream => {
    const mediaRecorder = new MediaRecorder(stream);
    const audioChunks = [];

    // When data is available, store it in the audioChunks array
    mediaRecorder.ondataavailable = event => {
      audioChunks.push(event.data);
    };

    // Start recording
    mediaRecorder.start();

    // Stop recording after 5 seconds (or use a stop button)
    setTimeout(() => {
      mediaRecorder.stop();
    }, 5000);

    // When the recording stops, process and upload the data
    mediaRecorder.onstop = () => {
      const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });
      const formData = new FormData();
      formData.append('audio', audioBlob, 'recording.webm');

      // Upload the audio file
      fetch('/upload', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        console.log('Upload success:', data);
      })
      .catch(error => {
        console.error('Upload failed:', error);
      });
    };
  })
  .catch(error => {
    console.error('Microphone access denied:', error);
  });</script>
</html>
